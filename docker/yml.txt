docker-compose.yml -> version: '3'
services:
  proyecto:
    build: .
    ports:
      - 8050:80
    volumes:
      - ./web:/var/www/html/
  db:
    image: postgres
    environment:
      POSTGRES_DB: cierva
      POSTGRES_USER: pepito
      POSTGRES_PASSWORD: cierva

------------------------------------------------------------------------


Dockerfile -> FROM php:7.2-apache
RUN apt-get update && apt-get install -y \
    libpq-dev \
&& docker-php-ext-install pgsql
RUN a2enmod rewrite
COPY 000-default.conf /etc/apache2/sites-available/
COPY /web/index.php /var/www/html/
CMD ["apachectl", "-D", "FOREGROUND"]

---------------------------------------------------------------------------

000-default.conf -> <VirtualHost *:80>
	# The ServerName directive sets the request scheme, hostname and port that
	# the server uses to identify itself. This is used when creating
	# redirection URLs. In the context of virtual hosts, the ServerName
	# specifies what hostname must appear in the request's Host: header to
	# match this virtual host. For the default virtual host (this file) this
	# value is not decisive as it is used as a last resort host regardless.
	# However, you must set it for any further virtual host explicitly.
	#ServerName www.example.com

	ServerAdmin webmaster@localhost
	DocumentRoot /var/www/html

	# Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
	# error, crit, alert, emerg.
	# It is also possible to configure the loglevel for particular
	# modules, e.g.
	#LogLevel info ssl:warn

	ErrorLog ${APACHE_LOG_DIR}/error.log
	CustomLog ${APACHE_LOG_DIR}/access.log combined

	# For most configuration files from conf-available/, which are
	# enabled or disabled at a global level, it is possible to
	# include a line for only one particular virtual host. For example the
	# following line enables the CGI configuration for this host only
	# after it has been globally disabled with "a2disconf".
	#Include conf-available/serve-cgi-bin.conf
</VirtualHost>

# vim: syntax=apache ts=4 sw=4 sts=4 sr noet

-----------------------------------------------------------------

index.php -> <?php
function getdb() {
 $db = pg_connect('host=db port=5432 dbname=cierva user=pepito
password=cierva connect_timeout=8') or die('connection failed');
 return $db;
}
echo getdb();
phpinfo();
?>

-------------------------------------------------------------

https://levelup.gitconnected.com/containerizing-nginx-php-fpm-on-alpine-linux-953430ea6dbc

https://dev.to/andre347/how-to-easily-create-a-postgres-database-in-docker-4moj



